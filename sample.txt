{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "10876703",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "data = {i:np.random.randn() for i in range(8)}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b6f4a484",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: 1.0992540166771794,\n",
       " 1: -0.518708540168347,\n",
       " 2: -0.8320558030632837,\n",
       " 3: 0.893486712299614,\n",
       " 4: -0.6012224462277364,\n",
       " 5: 0.6483480050563184,\n",
       " 6: 0.3681787577741676,\n",
       " 7: -1.6569414749803733}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "85a9aecd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/json": {
       "cell": {
        "!": "OSMagics",
        "HTML": "Other",
        "SVG": "Other",
        "bash": "Other",
        "capture": "ExecutionMagics",
        "cmd": "Other",
        "debug": "ExecutionMagics",
        "file": "Other",
        "html": "DisplayMagics",
        "javascript": "DisplayMagics",
        "js": "DisplayMagics",
        "latex": "DisplayMagics",
        "markdown": "DisplayMagics",
        "perl": "Other",
        "prun": "ExecutionMagics",
        "pypy": "Other",
        "python": "Other",
        "python2": "Other",
        "python3": "Other",
        "ruby": "Other",
        "script": "ScriptMagics",
        "sh": "Other",
        "svg": "DisplayMagics",
        "sx": "OSMagics",
        "system": "OSMagics",
        "time": "ExecutionMagics",
        "timeit": "ExecutionMagics",
        "writefile": "OSMagics"
       },
       "line": {
        "alias": "OSMagics",
        "alias_magic": "BasicMagics",
        "autoawait": "AsyncMagics",
        "autocall": "AutoMagics",
        "automagic": "AutoMagics",
        "autosave": "KernelMagics",
        "bookmark": "OSMagics",
        "cd": "OSMagics",
        "clear": "KernelMagics",
        "cls": "KernelMagics",
        "colors": "BasicMagics",
        "conda": "PackagingMagics",
        "config": "ConfigMagics",
        "connect_info": "KernelMagics",
        "copy": "Other",
        "ddir": "Other",
        "debug": "ExecutionMagics",
        "dhist": "OSMagics",
        "dirs": "OSMagics",
        "doctest_mode": "BasicMagics",
        "echo": "Other",
        "ed": "Other",
        "edit": "KernelMagics",
        "env": "OSMagics",
        "gui": "BasicMagics",
        "hist": "Other",
        "history": "HistoryMagics",
        "killbgscripts": "ScriptMagics",
        "ldir": "Other",
        "less": "KernelMagics",
        "load": "CodeMagics",
        "load_ext": "ExtensionMagics",
        "loadpy": "CodeMagics",
        "logoff": "LoggingMagics",
        "logon": "LoggingMagics",
        "logstart": "LoggingMagics",
        "logstate": "LoggingMagics",
        "logstop": "LoggingMagics",
        "ls": "Other",
        "lsmagic": "BasicMagics",
        "macro": "ExecutionMagics",
        "magic": "BasicMagics",
        "matplotlib": "PylabMagics",
        "mkdir": "Other",
        "more": "KernelMagics",
        "notebook": "BasicMagics",
        "page": "BasicMagics",
        "pastebin": "CodeMagics",
        "pdb": "ExecutionMagics",
        "pdef": "NamespaceMagics",
        "pdoc": "NamespaceMagics",
        "pfile": "NamespaceMagics",
        "pinfo": "NamespaceMagics",
        "pinfo2": "NamespaceMagics",
        "pip": "PackagingMagics",
        "popd": "OSMagics",
        "pprint": "BasicMagics",
        "precision": "BasicMagics",
        "prun": "ExecutionMagics",
        "psearch": "NamespaceMagics",
        "psource": "NamespaceMagics",
        "pushd": "OSMagics",
        "pwd": "OSMagics",
        "pycat": "OSMagics",
        "pylab": "PylabMagics",
        "qtconsole": "KernelMagics",
        "quickref": "BasicMagics",
        "recall": "HistoryMagics",
        "rehashx": "OSMagics",
        "reload_ext": "ExtensionMagics",
        "ren": "Other",
        "rep": "Other",
        "rerun": "HistoryMagics",
        "reset": "NamespaceMagics",
        "reset_selective": "NamespaceMagics",
        "rmdir": "Other",
        "run": "ExecutionMagics",
        "save": "CodeMagics",
        "sc": "OSMagics",
        "set_env": "OSMagics",
        "store": "StoreMagics",
        "sx": "OSMagics",
        "system": "OSMagics",
        "tb": "ExecutionMagics",
        "time": "ExecutionMagics",
        "timeit": "ExecutionMagics",
        "unalias": "OSMagics",
        "unload_ext": "ExtensionMagics",
        "who": "NamespaceMagics",
        "who_ls": "NamespaceMagics",
        "whos": "NamespaceMagics",
        "xdel": "NamespaceMagics",
        "xmode": "BasicMagics"
       }
      },
      "text/plain": [
       "Available line magics:\n",
       "%alias  %alias_magic  %autoawait  %autocall  %automagic  %autosave  %bookmark  %cd  %clear  %cls  %colors  %conda  %config  %connect_info  %copy  %ddir  %debug  %dhist  %dirs  %doctest_mode  %echo  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %macro  %magic  %matplotlib  %mkdir  %more  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %pip  %popd  %pprint  %precision  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %ren  %rep  %rerun  %reset  %reset_selective  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode\n",
       "\n",
       "Available cell magics:\n",
       "%%!  %%HTML  %%SVG  %%bash  %%capture  %%cmd  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%markdown  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile\n",
       "\n",
       "Automagic is ON, % prefix IS NOT needed for line magics."
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%lsmagic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a9f7eb08",
   "metadata": {},
   "outputs": [],
   "source": [
    "%magic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f8fc3bdf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63.4 ns ± 0.72 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\n"
     ]
    }
   ],
   "source": [
    "  %timeit range(1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "63f644bd",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<unknown>, line 1)",
     "output_type": "error",
     "traceback": [
      "Traceback \u001b[1;36m(most recent call last)\u001b[0m:\n",
      "  File \u001b[0;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py\"\u001b[0m, line \u001b[0;32m3457\u001b[0m, in \u001b[0;35mrun_code\u001b[0m\n    exec(code_obj, self.user_global_ns, self.user_ns)\n",
      "  File \u001b[0;32m\"C:\\Users\\JIM_HU~1\\AppData\\Local\\Temp/ipykernel_204/629348072.py\"\u001b[0m, line \u001b[0;32m1\u001b[0m, in \u001b[0;35m<module>\u001b[0m\n    get_ipython().run_line_magic('timeit', 'range(1000) -n 10')\n",
      "  File \u001b[0;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py\"\u001b[0m, line \u001b[0;32m2364\u001b[0m, in \u001b[0;35mrun_line_magic\u001b[0m\n    result = fn(*args, **kwargs)\n",
      "  File \u001b[0;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\decorator.py\"\u001b[0m, line \u001b[0;32m232\u001b[0m, in \u001b[0;35mfun\u001b[0m\n    return caller(func, *(extras + args), **kw)\n",
      "  File \u001b[0;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\magic.py\"\u001b[0m, line \u001b[0;32m187\u001b[0m, in \u001b[0;35m<lambda>\u001b[0m\n    call = lambda f, *a, **k: f(*a, **k)\n",
      "  File \u001b[0;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\magics\\execution.py\"\u001b[0m, line \u001b[0;32m1123\u001b[0m, in \u001b[0;35mtimeit\u001b[0m\n    ast_stmt = self.shell.compile.ast_parse(transform(stmt))\n",
      "\u001b[1;36m  File \u001b[1;32m\"C:\\Users\\jim_huang\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\compilerop.py\"\u001b[1;36m, line \u001b[1;32m101\u001b[1;36m, in \u001b[1;35mast_parse\u001b[1;36m\u001b[0m\n\u001b[1;33m    return compile(source, filename, symbol, self.flags | PyCF_ONLY_AST, 1)\u001b[0m\n",
      "\u001b[1;36m  File \u001b[1;32m\"<unknown>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    range(1000) -n 10\u001b[0m\n\u001b[1;37m                   ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "  %timeit range(1000) -n 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4c597567",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'n10' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32mC:\\Users\\JIM_HU~1\\AppData\\Local\\Temp/ipykernel_204/1932376532.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mget_ipython\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mrun_line_magic\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'timeit'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'range(1000) -n10'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py\u001b[0m in \u001b[0;36mrun_line_magic\u001b[1;34m(self, magic_name, line, _stack_depth)\u001b[0m\n\u001b[0;32m   2362\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'local_ns'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_local_scope\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstack_depth\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2363\u001b[0m             \u001b[1;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2364\u001b[1;33m                 \u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2365\u001b[0m             \u001b[1;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2366\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\decorator.py\u001b[0m in \u001b[0;36mfun\u001b[1;34m(*args, **kw)\u001b[0m\n\u001b[0;32m    230\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mkwsyntax\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    231\u001b[0m                 \u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfix\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msig\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 232\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mcaller\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mextras\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0margs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    233\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    234\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[1;34m(f, *a, **k)\u001b[0m\n\u001b[0;32m    185\u001b[0m     \u001b[1;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    186\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 187\u001b[1;33m         \u001b[0mcall\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    188\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    189\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mtimeit\u001b[1;34m(self, line, cell, local_ns)\u001b[0m\n\u001b[0;32m   1178\u001b[0m             \u001b[1;32mfor\u001b[0m \u001b[0mindex\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m10\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1179\u001b[0m                 \u001b[0mnumber\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m10\u001b[0m \u001b[1;33m**\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1180\u001b[1;33m                 \u001b[0mtime_number\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtimer\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtimeit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1181\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mtime_number\u001b[0m \u001b[1;33m>=\u001b[0m \u001b[1;36m0.2\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1182\u001b[0m                     \u001b[1;32mbreak\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\magics\\execution.py\u001b[0m in \u001b[0;36mtimeit\u001b[1;34m(self, number)\u001b[0m\n\u001b[0;32m    167\u001b[0m         \u001b[0mgc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdisable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    168\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 169\u001b[1;33m             \u001b[0mtiming\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minner\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mit\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtimer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    170\u001b[0m         \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    171\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mgcold\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m<magic-timeit>\u001b[0m in \u001b[0;36minner\u001b[1;34m(_it, _timer)\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'n10' is not defined"
     ]
    }
   ],
   "source": [
    "  %timeit range(1000) -n10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "61436bc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24.7 ms ± 434 µs per loop (mean ± std. dev. of 100 runs, 10 loops each)\n"
     ]
    }
   ],
   "source": [
    "strings = ['foo', 'foobar', 'baz', 'qux', 'python', 'Guido Van Rossum'] * 100000\n",
    "%timeit -r 100 method1 = [x for x in strings if x.startswith('foo')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a542f2ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " 'foo',\n",
       " 'foobar',\n",
       " ...]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "method1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c24065c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.68 s ± 29.9 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\n"
     ]
    }
   ],
   "source": [
    "strings = ['foo', 'foobar', 'baz', 'qux', 'python', 'Guido Van Rossum'] * 10000000\n",
    "\n",
    "%timeit -n 10 method1 = [x for x in strings if x.startswith('foo')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "75535241",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t1 = (1,2)\n",
    "t2 = 1,2\n",
    "type(t1)\n",
    "type(t2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "b663c009",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t1 = (1,2)\n",
    "t2 = 1,2\n",
    "type(t2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "26bdc6c8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
